(* Copyright 2023 Enrico Granata *)
(* *)
(* Licensed under the Apache License, Version 2.0 (the "License"); *)
(* you may not use this file except in compliance with the License. *)
(* You may obtain a copy of the License at *)
(*  *)
(*     http://www.apache.org/licenses/LICENSE-2.0 *)
(*  *)
(* Unless required by applicable law or agreed to in writing, software *)
(* distributed under the License is distributed on an "AS IS" BASIS, *)
(* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. *)
(* See the License for the specific language governing permissions and *)
(* limitations under the License. *)

val type VT {
    x: int32,
    init(x: int32) {
        self.x = x + 1;
    }
}

val type OT {}

impl VT {
    func eq(other: VT) ret bool {
        return self.x == other.x;
    }

    func eq(_: OT) ret bool {
        return false;
    }
}

impl VT {
    func abc(other: VT) ret bool {
        return other->eq(self);
    }
}

func main() ret int32 {
    let a = alloc VT(1);
    let b = alloc VT(2);
    let c = alloc VT(1);

    let ab = a->abc(b);
    let ac = a->abc(c);
    let bc = b->abc(c);

    assert ac == true;
    assert ab == false;
    assert bc == false;

    return 0;
}
