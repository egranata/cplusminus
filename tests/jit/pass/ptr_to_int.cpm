(* Copyright 2023 Enrico Granata *)
(* *)
(* Licensed under the Apache License, Version 2.0 (the "License"); *)
(* you may not use this file except in compliance with the License. *)
(* You may obtain a copy of the License at *)
(*  *)
(*     http://www.apache.org/licenses/LICENSE-2.0 *)
(*  *)
(* Unless required by applicable law or agreed to in writing, software *)
(* distributed under the License is distributed on an "AS IS" BASIS, *)
(* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. *)
(* See the License for the specific language governing permissions and *)
(* limitations under the License. *)

val type VT {}
ref type X {}
ref type Y {
    x: X,
    y: VT
}

func main() ret int32 {
    let vt = alloc VT;
    let y = alloc Y;

    let x_as_int = y.x as int64;
    let vt_as_int = (&vt) as int64;
    let y_as_int = y as int64;

    assert vt_as_int != 0;
    assert y_as_int != 0;
    assert x_as_int == 0;

    return 0;
}
