(* Copyright 2023 Enrico Granata *)
(* *)
(* Licensed under the Apache License, Version 2.0 (the "License"); *)
(* you may not use this file except in compliance with the License. *)
(* You may obtain a copy of the License at *)
(*  *)
(*     http://www.apache.org/licenses/LICENSE-2.0 *)
(*  *)
(* Unless required by applicable law or agreed to in writing, software *)
(* distributed under the License is distributed on an "AS IS" BASIS, *)
(* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. *)
(* See the License for the specific language governing permissions and *)
(* limitations under the License. *)
        
ref type number {
    val: int64
}

func new_number(n: int64) ret number {
    let num = alloc number;
    num.val = n;
    return num;
}

ref type pair {
    x: number,
    y: number
}

func foo() ret int64 {
    var p = alloc pair;
    p.x = new_number(3);
    p.y = new_number(4);
    return p.x.val + p.y.val;
}

func main() ret int64 {
    let n = foo();
    assert g_FreedObjects >= 1;
    return 0;
}

