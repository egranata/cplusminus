(* Copyright 2023 Enrico Granata *)
(* *)
(* Licensed under the Apache License, Version 2.0 (the "License"); *)
(* you may not use this file except in compliance with the License. *)
(* You may obtain a copy of the License at *)
(*  *)
(*     http://www.apache.org/licenses/LICENSE-2.0 *)
(*  *)
(* Unless required by applicable law or agreed to in writing, software *)
(* distributed under the License is distributed on an "AS IS" BASIS, *)
(* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. *)
(* See the License for the specific language governing permissions and *)
(* limitations under the License. *)

ref type RT {
    x: int32

    init() {
        self.x = 0;
    }
}

impl RT {
    func read() ret int32 = self.x

    func add(x: int32) {
        self.x = self.x + x;
    }
}

func main() ret int32 {
    let t = alloc RT();
    t->add(1);
    assert t->read() == 1;
    t->add(2);
    assert t->read() == 3;
    return 0;
}
