(* Copyright 2023 Enrico Granata *)
(* *)
(* Licensed under the Apache License, Version 2.0 (the "License"); *)
(* you may not use this file except in compliance with the License. *)
(* You may obtain a copy of the License at *)
(*  *)
(*     http://www.apache.org/licenses/LICENSE-2.0 *)
(*  *)
(* Unless required by applicable law or agreed to in writing, software *)
(* distributed under the License is distributed on an "AS IS" BASIS, *)
(* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. *)
(* See the License for the specific language governing permissions and *)
(* limitations under the License. *)

func foo(x: int32) ret int32 {
    return 0;
}

func bar(x: int32, y: int32) ret int32 {
    return 0;
}

type RT {}
impl RT {
    func m(x: int32, y: int32, z: int32) {}
}

func main() ret int64 {
    let a = foo(1,2,3);
    let b = foo();

    let fp = bar;
    let a = fp(1,2,3,4);
    let b = fp(1);

    let o = alloc RT;
    o->m(1,2);
    o->m(1,2,3,4,5);

    return a + b;
}
