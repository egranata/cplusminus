(* Copyright 2023 Enrico Granata *)
(* *)
(* Licensed under the Apache License, Version 2.0 (the "License"); *)
(* you may not use this file except in compliance with the License. *)
(* You may obtain a copy of the License at *)
(*  *)
(*     http://www.apache.org/licenses/LICENSE-2.0 *)
(*  *)
(* Unless required by applicable law or agreed to in writing, software *)
(* distributed under the License is distributed on an "AS IS" BASIS, *)
(* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. *)
(* See the License for the specific language governing permissions and *)
(* limitations under the License. *)

val type VT {
    x: int64,
    y: int32
}

ref type RT {
    x: int64,
    y: int32
}

func main() ret int32 {
    let vt = alloc VT;
    let rt = alloc RT;
    let b: byte = 1;

    assert (alignof expr vt) >= 4;
    assert (alignof expr rt) >= 4;

    assert (alignof type VT) >= 4;
    assert (alignof type RT) >= 4;

    assert (alignof type int32) >= 4;
    assert (alignof type [4]int32) >= 4;

    assert (alignof expr b+1) >= 1;

    return 0;
}
